version: '3.8'  # Version de Docker Compose utilisée (3.8 ici)

services:
  # Service Frontend
  frontend:  # Définition du service nommé "frontend" pour la partie frontend de l'application
    build:
      context: ./frontend  # Chemin vers le répertoire contenant le code source du frontend
      dockerfile: Dockerfile  # Fichier Dockerfile utilisé pour construire l'image
    ports:
      - "80:80"  # Le port 80 de l'hôte est redirigé vers le port 80 du conteneur (HTTP)
    depends_on:
      - backend  # Ce service dépend du service "backend" qui sera démarré avant lui
    networks:
      - app_network  # Le service frontend est connecté au réseau "app_network"

  # Service Backend
  backend:  # Définition du service "backend" pour la partie backend de l'application
    build:
      context: ./backend  # Chemin vers le répertoire contenant le code source du backend
      dockerfile: Dockerfile  # Fichier Dockerfile utilisé pour construire l'image
    ports:
      - "5000:5000"  # Le port 5000 de l'hôte est redirigé vers le port 5000 du conteneur (ex : API REST)
    environment:
      - DATABASE_HOST=db  # Définit le nom d'hôte "db" pour la connexion à la base de données
      - DATABASE_USER=root  # Nom d'utilisateur pour la base de données (ici "root")
      - DATABASE_PASSWORD=  # Mot de passe pour la base de données (vide ici pour simplification)
      - DATABASE_NAME=cloud  # Nom de la base de données à utiliser (ici "cloud")
    depends_on:
      - db  # Ce service dépend du service "db" (la base de données), qui doit démarrer en premier
    networks:
      - app_network  # Le service backend est connecté au réseau "app_network"

  # Service Base de Données (DB)
  db:  # Définition du service "db" pour la base de données (MySQL dans ce cas)
    image: mysql:8.0  # Utilisation de l'image officielle MySQL, version 8.0
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"  # Permet de démarrer MySQL sans mot de passe pour root
      MYSQL_DATABASE: cloud  # Crée une base de données nommée "cloud" lors de l'initialisation
    ports:
      - "3306:3306"  # Le port 3306 de l'hôte est redirigé vers le port 3306 du conteneur (MySQL)
    volumes:
      - db_data:/var/lib/mysql  # Monte le volume "db_data" dans le répertoire de stockage de données MySQL
    networks:
      - app_network  # Le service db est connecté au réseau "app_network"

networks:
  app_network:  # Définition du réseau nommé "app_network"
    driver: bridge  # Utilise le mode "bridge" pour créer un réseau isolé pour les services

volumes:
  db_data:  # Définition du volume persistant "db_data" pour conserver les données de la base de données MySQL
